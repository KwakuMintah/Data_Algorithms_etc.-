clear all;
load("mnist.mat");

%Taken from Week One
XTestReshape = reshape(XTest,28,28,10000);
XTestReshapeForDiv = reshape(XTestReshape, [], 10000);
XTestReshapeTrans = transpose(XTestReshapeForDiv);
YTestTrans = transpose(YTest);
C = mrdivide(XTestReshapeForDiv,YTestTrans);
CTrans = transpose(C);
YHatTest = (XTestReshapeTrans * C);
YHatTestTrans = transpose(YHatTest);

d = YTestTrans - (CTrans * XTestReshapeForDiv);
nFull = size(YTestTrans);
n = nFull(1,2);

mse = mean(abs(YHatTest - YTest));

%y_k = (CTrans * XTestReshapeForDiv);
%Everything past this point comes out as a list of zeros
maxError = abs(YHatTest - YTest);
l_two = lTwoNorm(YHatTest,YTest,n);
l_one = lOneNorm(YHatTest,YTest,n);

x0 = C(1,1);
%fminr = fminsearch(C,x0);

%One Hot Encode
digits = ["One","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten"];
digits = categorical(digits);
categories(digits);
digits = onehotencode(digits,1);
XTestReshapeOHE = reshape(XTestReshape, [], 10);
XTestReshapeOHETrans = transpose(XTestReshapeOHE);
cOHE = mrdivide(XTestReshapeOHE,digits);
YHatOHE = (XTestReshapeOHETrans * cOHE);

nFullOHE = size(digits);
nOHE = nFullOHE(1,2);
mseOHE = mean(abs(YHatOHE - digits));
maxErrorOHE = abs(YHatOHE - digits);
l_twoOHE = lTwoNorm(YHatOHE,digits,nOHE);
l_oneOHE = lOneNorm(YHatOHE,digits,nOHE);

function l_two = lTwoNorm(y_k,YTestTrans,n)
  coef = 1/n;
  brac = abs(y_k - YTestTrans);
  bracsq = brac.^2;
  bracsum = sum(bracsq,"all");
  rootsum = sqrt(bracsum);
  l_two = coef * rootsum;
end

function l_one = lOneNorm(y_k,YTestTrans,n)
  coef = 1/n;
  brac = y_k - YTestTrans;
  bracsum = sum(brac,"all");
  l_one = coef * bracsum;
end
