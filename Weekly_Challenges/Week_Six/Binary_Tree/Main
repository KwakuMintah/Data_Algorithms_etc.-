// Binary_Tree.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include "Tree.hpp"
#include "QuadTree.hpp"
#include "Node.hpp"

void testTree() {
    node nodeRoot(0, 0.0);
    node* seed = &nodeRoot;

    node nodeOne(1, 1.0);
    node nodeTwo(2, 2.0);
    node nodeThree(3, 3.0);
    node nodeFour(4, 4.0);
    node nodeFive(5, 5.0);

    node* one = &nodeOne;
    node* two = &nodeTwo;
    node* three = &nodeThree;
    node* four = &nodeFour;
    node* five = &nodeFive;

    tree treeOne(two);
    treeOne.grow(two, one, three);
    treeOne.grow(one, seed, NULL);
    treeOne.printmat(two);
};

void testQuad() {
    //Currently working on a more efficient way to do this.
    quadnode nodeRoot(0, 0, 0.0);
    quadnode* seed = &nodeRoot;

    quadnode subMatOne(0, 0, 1000.0);
    quadnode subMatTwo(0, 0, 2000.0);
    quadnode subMatThree(0, 0, 3000.0);
    quadnode subMatFour(0, 0, 4000.0);

    quadnode nodeOne(1, 1, 1.0);
    quadnode nodeTwo(1, 2, 2.0);
    quadnode nodeThree(1, 3, 3.0);
    quadnode nodeFour(1, 4, 4.0);
    quadnode nodeFive(2, 1, 5.0);
    quadnode nodeSix(2, 2, 6.0);
    quadnode nodeSeven(2, 3, 7.0);
    quadnode nodeEight(2, 4, 8.0);
    quadnode nodeNine(3, 1, 9.0);
    quadnode nodeTen(3, 2, 10.0);
    quadnode nodeEleven(3, 3, 11.0);
    quadnode nodeTwelve(3, 4, 12.0);
    quadnode nodeThirteen(4, 1, 13.0);
    quadnode nodeFourteen(4, 2, 14.0);
    quadnode nodeFifteen(4, 3, 15.0);
    quadnode nodeSixteen(4, 4, 16.0);

    quadnode* nw = &subMatOne;
    quadnode* ne = &subMatTwo;
    quadnode* sw = &subMatThree;
    quadnode* se = &subMatFour;

    quadnode* one = &nodeOne;
    quadnode* two = &nodeTwo;
    quadnode* three = &nodeThree;
    quadnode* four = &nodeFour;
    quadnode* five = &nodeFive;
    quadnode* six = &nodeSix;
    quadnode* seven = &nodeSeven;
    quadnode* eight = &nodeEight;
    quadnode* nine = &nodeNine;
    quadnode* ten = &nodeTen;
    quadnode* eleven = &nodeEleven;
    quadnode* twelve = &nodeTwelve;
    quadnode* thirteen = &nodeThirteen;
    quadnode* fourteen = &nodeFourteen;
    quadnode* fifteen = &nodeFifteen;
    quadnode* sixteen = &nodeSixteen;

    quadtree treeOne(seed);
    treeOne.grow(seed, nw, ne, sw, se);
    treeOne.grow(nw, one, two, five, six);
    treeOne.grow(ne, three, four, seven, eight);
    treeOne.grow(sw, nine, ten, thirteen, fourteen);
    treeOne.grow(se, eleven, twelve, fifteen, sixteen);
    treeOne.printval(seed);
    cout << "\n" << "Looky here" << "\n";
    //treeOne.printbysub(seed);
};

int main()
{
    std::cout << "Hello World!\n";

    //testTree();

    cout << "\n" << "QuadTree" << "\n";

    testQuad();
}
