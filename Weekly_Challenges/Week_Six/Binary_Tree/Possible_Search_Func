//First set the data in the submat and mainmat nodes to NULL

search(node* root, int i_que, int j_que) {
    if (root->matData == NULL) {
        search(root->north, i_que, j_que);
        search(root->east, i_que, j_que);
        search(root->south, i_que, j_que);
        search(root->west, i_que, j_que);
    } else if (root->matData != NULL) {
        if (root->i == i_que) && (root->j == j_que) {
            cout << "This is found at " << i_que << j_que << " : " << root->matData;
        } else {
          return;
        }
    } else if (root == NULL) {
      return;
    }
}

//Could apply this to a sum func
sum(node* root_one, node* root_two) {
    if (root_one->matData == NULL) && (root_two->matData == NULL) {
        sum(root_one->north,root_one->north) etc.
    } else if (root_one->matData == NULL) && (root_one->matData != NULL) {
        sum(root_one->north,root_two) etc.
    } else if (root_one->matData != NULL) && (root_one->matData == NULL) {
        sum(root_one,root_two->north) etc.
    } else if (root_one->matData != NULL) && (root_one->matData != NULL) {
        if (root_one->i == root_two->i) && (root_two->j == root_two->j) {
            add them yk (make a node func for this)
            quadnode* quad_sum = addQuad(root_one, root_two);
        } else {
            return;
        }
    } else if (root_one == NULL) && (root_two == NULL) {
        return;
    }
}
