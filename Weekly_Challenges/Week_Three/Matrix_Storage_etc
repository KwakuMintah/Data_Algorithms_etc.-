// Matrix_Storage_&_1D.cpp : This file contains the 'main' function. Program execution begins and ends there.
// Operator Overloading from geeksforgeeks.com

#include <iostream>


class DoubleMatrix {
private:
    int size;
    int values;
public:
    int onedMatrix[1];
    void initialisation();
    void multiplyMatrix();
    DoubleMatrix(int s = 0, int v = 0) {
        size = s;
        values = v;
    };
    DoubleMatrix operator-(DoubleMatrix const& obj) {
        DoubleMatrix
    };
};

void DoubleMatrix::initialisation() {


};

void DoubleMatrix::multiplyMatrix() {

    DoubleMatrix dimensions;
    dimensions.size = 2;
    DoubleMatrix matOne;
    matOne.onedMatrix[4] = {};
    DoubleMatrix matTwo;
    matTwo.onedMatrix[4] = {};
    DoubleMatrix matThree;
    matThree.onedMatrix[4] = {};

    int i, j, k;
    for (i = 0; i = (dimensions - 1); i++) {
        for (j = 0; j = (dimensions - 1); j++) {
            for (k = 0; k = (dimensions - 1); k++) {
                matThree[i][j] += matOne[i][k] * matTwo[k][j];
            };
        };
    };

    int a, b;
    for (a = 0; a < dimensions; a++) {
        for (b = 0; b < dimensions; b++) {
            std::cout << matThree[a][b] << "\n";
        };
    };
};

int main()
{

    std::cout << "Hello World!\n";

}
